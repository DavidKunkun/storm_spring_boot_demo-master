spring:
  datasource:
      test1db:
          name: test1db
          type: com.alibaba.druid.pool.DruidDataSource
          url: jdbc:mysql://192.168.20.20:3306/test?useUnicode=true&characterEncoding=UTF-8
          username: ENC(dGVzdA==) #test
          password: ENC(dGVzdEAxMjM=) #test@123
          driver-class-name: com.mysql.jdbc.Driver
          minIdle: 1
          maxActive: 2
          initialSize: 1
          timeBetweenEvictionRunsMillis: 3000
          minEvictableIdleTimeMillis: 300000
          validationQuery: SELECT 1 FROM DUAL
          testWhileIdle: true
          testOnBorrow: false
          testOnReturn: false
      test2db:
          name: test2db
          type: com.alibaba.druid.pool.DruidDataSource
          url: jdbc:mysql://192.168.20.20:3306/test?useUnicode=true&characterEncoding=UTF-8
          username: ENC(dGVzdA==) #test
          password: ENC(dGVzdEAxMjM=) #test@123
          driver-class-name: com.mysql.jdbc.Driver
          minIdle: 1
          maxActive: 2
          initialSize: 1
          timeBetweenEvictionRunsMillis: 3000
          minEvictableIdleTimeMillis: 300000
          validationQuery: SELECT 1 FROM DUAL
          testWhileIdle: true
          testOnBorrow: false
          testOnReturn: false
  redis:
      database: 0
      password:
      cluster:
        nodes:
            - 192.168.20.33:22400
        maxRedirects: 6
      pool:
        max-idle: 8
        min-idle: 0
        max-active: 8
        max-wait: -1
  kafka:
    bootstrap-servers: CDH-Node1:9092,CDH-Node2:9092,CDH-Node3:9092

################### Kafka Topic ###################
#(1)脚本手工创建
# bin/kafka-topics.sh --zookeeper CDH-Node1:2181 --create --topic stormTest --replication-factor 2 --partitions 3
# –topic指定topic name
# –partitions指定分区数，这个参数需要根据broker数和数据量决定，正常情况下，每个broker上两个partition最好；
# –replication-factor指定partition的replicas数，建议设置为2；
#(2)程序自动创建：
# 开启自动创建配置：auto.create.topics.enable=true
# 使用程序直接往kafka中相应的topic发送数据，如果topic不存在就会按默认配置进行创建。
#(3)消费Kafka ： bin/kafka-console-consumer.sh  --zookeeper CDH-Node1:2181  --topic stormTest --from-beginning
################### Kafka Topic ###################

################### Redis Single Node ###################
#spring:
#  redis:
#    database: 0
#    host: 192.168.20.33:22400
#    password:
#    port: 22400
#    pool:
#      max-idle: 8
#      min-idle: 0
#      max-active: 8
#      max-wait: -1
################### Redis Single Node ###################

# 这里可以配置更多的storm apps优化参数，目前只有parallelismHint（并行度）
storm:
  props:
    topologyName: StormDemo
    topologyWorkers: 1
    numTasks: 1
    topologyMaxSpoutPending: 5000
    topologyMessageTimeoutSecs: 30
  datasource:
      mysql:
        dataSourceClassName: com.mysql.jdbc.jdbc2.optional.MysqlDataSource
        dataSourceUrl: jdbc:mysql://192.168.20.20:3306/test?useUnicode=true&characterEncoding=UTF-8
        dataSourceUser: ENC(dGVzdA==) #test
        dataSourcePassword: ENC(dGVzdEAxMjM=) #test@123
  spout:
    kafkaProducerSpout:
      parallelismHint: 3
      topic: stormTest
#    kafkaSpout:
#          parallelismHint: 3
#          topic: stormTest
#          brokerZkStr: CDH-Node1:2181,CDH-Node2:2181,CDH-Node3:2181
#          zkRoot: /zkRootTest
    kafkaClientSpout:
      parallelismHint: 3
      groupId: stormTestGroupId
      topics:
        - stormTest
      bootstrapServers: CDH-Node1:9092,CDH-Node2:9092,CDH-Node3:9092
  bolt:
    splitSentenceBolt:
        parallelismHint: 3
    wordCountBolt:
        parallelismHint: 3
        emitFrequencyInSeconds: 30
    wordCountToRedisBolt:
        parallelismHint: 3
    wordCountTopNToRedisBolt:
        parallelismHint: 3
    wordCountToMySQLBolt:
        parallelismHint: 3
        tableName: test.word_count
        queryTimeoutSecs: 30
        insertQuery: INSERT INTO test.word_count(targetDate,word,`count`) VALUES (?,?,?) ON DUPLICATE KEY UPDATE `count`=`count`+?
    rollingWordCountBolt:
        parallelismHint: 3
        windowLengthInSeconds: 300
        emitFrequencyInSeconds: 30
    intermediateRankingsWordCountBolt:
        parallelismHint: 3
        topN: 2
        emitFrequencyInSeconds: 30
    totalRankingsWordCountBolt:
        parallelismHint: 3
        topN: 2
        emitFrequencyInSeconds: 30

